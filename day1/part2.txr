@(bind word #/(one|two|three|four|five|six|seven|eight|nine)/)
@(bind number #/([0-9])/)
@(define match-digit (out))@(block)@(trailer)@(cases)@{out word}@(or)@{out number}@(end)@(end)@/./@(end)
@(do (defun to-num (arg)
       (match-case arg
         ("one" 1) ("two" 2) ("three" 3)
         ("four" 4) ("five" 5) ("six" 6)
         ("seven" 7) ("eight" 8) ("nine" 9)
         (@n (num-str n)))))
@(bind sum 0)
@(repeat)
@ (coll)@(match-digit digits)@(end)
@ (do (inc sum (num-str `@(to-num [digits 0])@(to-num [digits -1])`)))
@(end)
@(output)
Part2: @sum
@(end)
